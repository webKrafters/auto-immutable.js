{"version":3,"file":"component---src-pages-api-method-set-tags-set-usage-tsx-153c550bf853b5ef960f.js","mappings":"2NA4GA,UAtB+DA,IAAA,IAAC,UAAEC,GAAW,SACzEC,EAAAA,cAAAA,UAAAA,CAASD,UAAa,+BAA+BA,KACjDC,EAAAA,cAAAA,KAAAA,KAAI,mBACJA,EAAAA,cAAAA,IAAAA,KACIA,EAAAA,cAAAA,SAAAA,KAAQ,gBACRA,EAAAA,cAAAA,MAAAA,KAAQ,uBAEZA,EAAAA,cAAAA,IAAAA,KACIA,EAAAA,cAAAA,SAAAA,KAAQ,gBACRA,EAAAA,cAAAA,MAAAA,KACO,kDAGXA,EAAAA,cAAAA,IAAAA,KAAG,+CACHA,EAAAA,cAAAA,IAAAA,KAAG,6HACHA,EAAAA,cAAAA,IAAAA,KAAG,iBAAc,8BAAQA,EAAAA,cAACC,EAAAA,EAAM,CAACC,GAAG,sCAAqC,cAA2B,mFACpGF,EAAAA,cAAAA,IAAAA,KAAG,sDAAmD,4BAAM,aAAgB,kEAC5EA,EAAAA,cAAAA,KAAAA,KAAI,YACJA,EAAAA,cAACG,EAAAA,EAAS,KA9FjB,otDA+Fa,EAKP,MAAMC,EAAgB,IAAQJ,EAAAA,cAAAA,QAAAA,KAASK,EAAAA,QAASC,MAAO,U","sources":["webpack://auto-immutable-docs/./src/pages/api/method/set/tags/set-usage.tsx"],"sourcesContent":["import { HeadFC } from 'gatsby';\n\nimport React from 'react';\n\nimport metadata from '../../../../../../gatsby-config/metadata';\n\nimport Anchor from '../../../../../partials/anchor';\nimport CodeBlock from '../../../../../partials/code-block';\n\nconst SAMPLE =\n`import AutoImmutable, { Tag } from 'auto-immutable';\n\nconst protectedData = {\n    a: {\n        b: [\n            { x: 7, y: 8, z: 9 },\n            { x: 17, y: 18, z: 19 }\n        ]\n    },\n    j: 10\n};\n\nconst aImmutable = new AutoImmutable( protectedData );\nconst consumer = aImmutable.connect();\n\n/* rewrites aImmutable data to { ...aImmutable data, a: 'Demo', j: 17 } */\nconsumer.set({\n    [ Tag.SET ]: currentValue => ({\n        ...currentValue,\n        a: 'Demo',\n        j: 17\n    })\n});\n\n/* rewrites aImmutable data.a to { ...aImmutable data, message: 'Testing...' } */\nconsumer.set({\n    a: {\n        [ Tag.SET ]: currentValue => ({\n            ...currentValue,\n            message: 'Testing...'\n        })\n    }\n});\n\n//  rewrites aImmutable data.a.b[1] to { x: 97, y: 98, z: 99 };\n//  leaving aImmutable data.a.b = [\n//       { x: 7, y: 8, z: 9 },\n//       { x: 97, y: 98, z: 99 }\n//  ]\nconsumer.set({\n    a: {\n        b: [\n            aImmutable data.a.b[ 0 ],\n            {\n                [ Tag.SET ]: currentValue => ({\n                    ...currentValue,\n                    x: 97,\n                    y: 98,\n                    z: 99\n                })\n            }\n        ]\n    }\n});\n\n//  rewrites aImmutable data.a.b[1] to { x: 97, y: 98, z: 99 };\n//  leaving aImmutable data.a.b = [\n//     { x: 7, y: 8, z: 9 },\n//     { x: 97, y: 98, z: 99 }\n//  ]\n//  uses indexing (RECOMMENDED)\nconsumer.set({\n    a: {\n        b: {\n            1: {\n                [ Tag.SET ]: currentValue => ({\n                    ...currentValue,\n                    x: 97,\n                    y: 98,\n                    z: 99\n                })\n            }\n        }\n    }\n});`;\n\nconst SetMethodApiSetTagPage : React.FC<{className: string}> = ({ className }) => (\n    <article className={ `set-method-api-set-tag-page ${ className }` }>\n        <h1>@@SET Tag Usage</h1>\n        <p>\n            <strong>Signature 1:</strong>\n            <pre>{ `{ '@@SET': <any> }` }</pre>\n        </p>\n        <p>\n            <strong>Signature 2:</strong>\n            <pre>\n                { `{ '@@SET': ( currentValue: <any> ) => <any> }` }\n            </pre>\n        </p>\n        <p>This tag is mainly for handling edge cases.</p>\n        <p>Please use sparingly. In most cases, consumer.set with or without any of the other tags is sufficient and most efficient.</p>\n        <p>This and the '<strong><Anchor to=\"/api/method/set/tags/replace-usage\">@@REPLACE</Anchor></strong>' tags are functionally equivalent when used with a replacement value argument.</p>\n        <p>Be aware that the compute function argument may be <code>undefined</code> for properties which do not yet exist in the aImmutable data.</p>\n        <h3>Example:</h3>\n        <CodeBlock>{ SAMPLE }</CodeBlock>\n    </article>\n);\n\nexport default SetMethodApiSetTagPage;\n\nexport const Head : HeadFC = () => ( <title>{ metadata.title }: @@SET</title> );\n"],"names":["_ref","className","React","Anchor","to","CodeBlock","Head","metadata","title"],"sourceRoot":""}