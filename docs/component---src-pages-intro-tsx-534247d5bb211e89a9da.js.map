{"version":3,"file":"component---src-pages-intro-tsx-534247d5bb211e89a9da.js","mappings":"wPAwFA,MA/EmDA,IAAoB,IAAnB,UAAEC,GAAW,EAChE,MAAQC,MAAQC,cAAc,MAC7BC,EACAC,KACCC,KAAMC,EACNC,IAAKC,OAECC,EAAAA,EAAAA,gBAAe,cAerB,OACDC,EAAAA,cAAAA,UAAAA,CAASV,UAAa,cAAcA,KACnCU,EAAAA,cAAAA,KAAAA,KAAI,cAAaP,EAAO,KACxBO,EAAAA,cAAAA,MAAAA,CAAKV,UAAU,QAAO,uHAGtBU,EAAAA,cAAAA,MAAAA,CAAKV,UAAU,QACdU,EAAAA,cAAAA,QAAAA,KACCA,EAAAA,cAAAA,SAAAA,KAAQ,cACRA,EAAAA,cAACC,EAAAA,EAAM,CAACC,GAAKJ,GAAS,uBAGxBE,EAAAA,cAAAA,MAAAA,CAAKV,UAAU,qBACdU,EAAAA,cAAAA,KAAAA,KAAIA,EAAAA,cAAAA,IAAAA,KAAG,iBACPA,EAAAA,cAAAA,QAAAA,KACCA,EAAAA,cAAAA,SAAAA,KAAQ,SACRA,EAAAA,cAACG,EAAAA,EAAS,CAACC,UAAQ,GAAC,sCAIrBJ,EAAAA,cAAAA,QAAAA,KACCA,EAAAA,cAAAA,SAAAA,KAAQ,cACRA,EAAAA,cAACG,EAAAA,EAAS,CAACC,UAAQ,GAAC,oDAKtBJ,EAAAA,cAAAA,MAAAA,CAAKV,UAAU,QACdU,EAAAA,cAAAA,QAAAA,KACCA,EAAAA,cAAAA,SAAAA,KAAQ,kCACRA,EAAAA,cAACC,EAAAA,EAAM,CAACC,GAAKN,GAAU,kBAGzBI,EAAAA,cAAAA,MAAAA,CAAKV,UAAU,QACdU,EAAAA,cAAAA,QAAAA,KACCA,EAAAA,cAAAA,SAAAA,KAAQ,aACRA,EAAAA,cAAAA,OAAAA,KAAM,SAGRA,EAAAA,cAAAA,MAAAA,CAAKV,UAAU,QACdU,EAAAA,cAAAA,KAAAA,KAAI,OAAMP,EAAO,KAAM,cACZ,yBAAGO,EAAAA,cAAAA,SAAAA,KAAQ,QAAgB,aAAYP,EAAO,0BAAuB,2BAAM,0BAEtF,0BACCO,EAAAA,cAAAA,KAAAA,KAAI,yDACJA,EAAAA,cAAAA,KAAAA,KAAI,sCAAmC,4BAAM,oBAAwB,KAAC,4BAAM,sBAA0B,KAAC,4BAAM,iBAAoB,4BAAM,WAAe,KAAC,4BAAM,aAAgB,kCAA+B,gBAACC,EAAAA,EAAM,CAACC,GAAG,mBAAkBF,EAAAA,cAAAA,OAAAA,KAAM,uBAAkC,KACjRA,EAAAA,cAAAA,KAAAA,KAAI,yCAAsC,4BAAM,YAAe,qDAAkD,gBAACC,EAAAA,EAAM,CAACC,GAAG,mBAAkBF,EAAAA,cAAAA,OAAAA,KAAM,uBAAkC,KACtLA,EAAAA,cAAAA,KAAAA,KAAI,eAAY,yBAAG,2BAA2B,gBAAa,gBAACC,EAAAA,EAAM,CAACC,GAAG,2BAA0B,iBAAsB,QAAK,4BAAM,sBAAyB,IAAC,gBAACD,EAAAA,EAAM,CAACC,GAAG,kCAAiC,YAAiB,OAG1NF,EAAAA,cAAAA,MAAAA,CAAKV,UAAU,QAAO,+BACO,gBAACW,EAAAA,EAAM,CAACC,GAAG,qBAAoB,oBAEnD,ECpEL,MAAMG,EAA6BhB,IAAA,IAAC,KAAEiB,GAAM,SAC/CN,EAAAA,cAAAA,EAAAA,SAAAA,KACIA,EAAAA,cAAAA,QAAAA,KAAO,cAAaM,EAAKf,KAAKC,aAAaC,MAAO,KAClDO,EAAAA,cAAAA,OAAAA,CACIO,QAAW,cAAcD,EAAKf,KAAKC,aAAaC,SAChDe,KAAK,gBAEV,C","sources":["webpack://auto-immutable-docs/./src/partials/contents/intro-page/component.tsx","webpack://auto-immutable-docs/./src/pages/intro.tsx"],"sourcesContent":["import React from 'react';\n\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport Anchor from '../../anchor';\nimport CodeBlock from '../../code-block';\n\nimport './style.scss';\n\nconst IntroPage: React.FC<{ className: string }> = ({ className }) => {\n\tconst { site: { siteMetadata: {\n\t\ttitle,\n\t\turl: {\n\t\t\tdemo: demoUrl,\n\t\t\tnpm: npmUrl\n\t\t}\n\t} } } = useStaticQuery(\n\t\tgraphql`\n\t\t\tquery IntroPageVm {\n\t\t\t\tsite {\n\t\t\t\t\tsiteMetadata {\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\turl {\n\t\t\t\t\t\t\tdemo,\n\t\t\t\t\t\t\tnpm\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`\n\t);\n  \treturn (\n\t\t<article className={ `intro-page ${ className }` }>\n\t\t\t<h1>Welcome to { title }!</h1>\n\t\t\t<div className=\"para\">\n\t\t\t\tFramework agnostic automatic immutable writing data-structure for javascript and typescript functional programming.\n\t\t\t</div>\n\t\t\t<div className=\"para\">\n\t\t\t\t<label>\n\t\t\t\t\t<strong>Official: </strong>\n\t\t\t\t\t<Anchor to={ npmUrl }>Auto Immutable JS</Anchor>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div className=\"para installation\">\n\t\t\t\t<h4><u>Installation</u></h4>\n\t\t\t\t<label>\n\t\t\t\t\t<strong>Main:</strong>\n\t\t\t\t\t<CodeBlock isInline>\n\t\t\t\t\t\tnpm install --save auto-immutable\n\t\t\t\t\t</CodeBlock>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\t<strong>Alternate:</strong>\n\t\t\t\t\t<CodeBlock isInline>\n\t\t\t\t\t\tnpm install --save @webkrafters/auto-immutable\n\t\t\t\t\t</CodeBlock>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div className=\"para\">\n\t\t\t\t<label>\n\t\t\t\t\t<strong>Play with a demo app here on: </strong>\n\t\t\t\t\t<Anchor to={ demoUrl }>Code Sandbox</Anchor>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div className=\"para\">\n\t\t\t\t<label>\n\t\t\t\t\t<strong>License: </strong>\n\t\t\t\t\t<span>MIT</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div className=\"para\">\n\t\t\t\t<h2>Why { title }?</h2>\n\t\t\t\tWhy should <i><strong>you</strong></i> consider { title } for your next project?<br />\n\t\t\t\tHere are a few reasons:\n\t\t\t\t<ul>\n\t\t\t\t\t<li> Auto-immutable protects data from random mutations. </li>\n\t\t\t\t\t<li> It is write-friendly. No need for <code>[].concat([...])</code>, <code>Object.assign(...)</code>, <code>$.extend(...)</code><code>...rest</code>, <code>...spread</code> or any similar operation. See <Anchor to=\"/api/method/set\"><code>immutable.set(...)</code></Anchor>.</li>\n\t\t\t\t\t<li> It is read-friendly. Simply call the <code>get(...)</code> with the data object property paths to read. See <Anchor to=\"/api/method/get\"><code>immutable.get(...)</code></Anchor>.</li>\n\t\t\t\t\t<li> Recognizes <b>negative array indexing</b>. Please see <Anchor to=\"/concepts/property-path\">Property Path</Anchor> and <code>immutable.set(...)</code> <Anchor to=\"/api/method/set/array-indexing\">Indexing</Anchor>.</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className=\"para\">\n\t\t\t\tMay see features history at <Anchor to=\"/history/features\">What's Changed?</Anchor>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default IntroPage;\n\t\t\n","import type { HeadFC } from 'gatsby';\n\nimport React from 'react';\n\nimport { graphql } from 'gatsby';\n\nexport interface HeadDataProp {\n    site: {\n        siteMetadata: {\n            title : string\n        }\n    }\n}\n\nexport { default } from '../partials/contents/intro-page';\n\nexport const Head: HeadFC<HeadDataProp> = ({ data }) => (\n    <>\n        <title>Welcome to { data.site.siteMetadata.title }!</title>\n        <meta\n            content={ `Welcome to ${ data.site.siteMetadata.title }.` }\n            name=\"description\"\n        />\n    </>\n);\n\nexport const query = graphql`\n    query IntroTitle {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n    }\n`"],"names":["_ref","className","site","siteMetadata","title","url","demo","demoUrl","npm","npmUrl","useStaticQuery","React","Anchor","to","CodeBlock","isInline","Head","data","content","name"],"sourceRoot":""}