"use strict";(self.webpackChunkauto_immutable_docs=self.webpackChunkauto_immutable_docs||[]).push([[967],{91816:function(n,e,t){t.r(e),t.d(e,{Head:function(){return o}});var a=t(67294),l=t(75591),m=t(41520);e.default=n=>{let{className:e}=n;return a.createElement("article",{className:`set-method-api-move-tag-page ${e}`},a.createElement("h1",null,"@@MOVE Tag Usage"),a.createElement("p",null,a.createElement("strong",null,"Signature:"),a.createElement("pre",null,"{\n    '@@MOVE': [\n        -/+fromIndex,\n        -/+toIndex,\n        +numItemsToMove? = 1\n    ]\n}")),a.createElement("h3",null,"Example:"),a.createElement(m.Z,null,"import AutoImmutable, { Tag } from '@webkrafters/react-observable-context';\n\nconst protectedData = {\n    a: {\n        b: [\n            { x: 7, y: 8, z: 9 },\n            { x: 17, y: 18, z: 19 }\n        ]\n    },\n    j: 10,\n    q: [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n};\n\nconst aImmutable = new AutoImmutable( protectedData );\nconst consumer = aImmutable.connect();\n\n/* assigning a '@@MOVE' command to a non-array property has no effect. */\nconsumer.set({\n    a: {\n        [ Tag.MOVE ]: [ 0, 1 ]\n    }\n});\n\n//  moves aImmutable data.a.b[0] into index 1;\n//  leaving aImmutable data.a.b = [{\n//      x: 17, y: 18, z: 19 },\n//      { x: 7, y: 8, z: 9 }\n//  ]\nconsumer.set({\n    a: {\n        b: {\n            [ Tag.MOVE ]: [ 0, 1 ] // or [ -2, -1 ] with negative indexing\n        }\n    }\n});\n\n//  moves aImmutable data.q[4] - [7] into indexes 1 - 4;\n//  leaving aImmutable data.q = [ 1, 5, 6, 7, 8, 2, 3, 4, 9 ]\nconsumer.set({\n    a: {\n        q: {\n            [ Tag.MOVE ]: [ 4, 1, 4 ] // or [ -5, -8, 4 ] with negative indexing\n        }\n    }\n});"))};const o=()=>a.createElement("title",null,l.default.title,": @@MOVE")}}]);
//# sourceMappingURL=component---src-pages-api-method-set-tags-move-usage-tsx-98b90806547c038d00a8.js.map