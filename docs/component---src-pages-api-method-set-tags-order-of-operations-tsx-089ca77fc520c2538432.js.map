{"version":3,"file":"component---src-pages-api-method-set-tags-order-of-operations-tsx-089ca77fc520c2538432.js","mappings":"4KA4GA,UAZkEA,IAAA,IAAC,UAAEC,GAAW,SAC5EC,EAAAA,cAAAA,UAAAA,CAASD,UAAa,kCAAkCA,KACpDC,EAAAA,cAAAA,KAAAA,KAAI,2BACJA,EAAAA,cAAAA,IAAAA,KAAG,2NACHA,EAAAA,cAAAA,IAAAA,KAAG,gDAA6C,8BAAQA,EAAAA,cAACC,EAAAA,EAAM,CAACC,GAAG,mEAAkE,0BAAuC,qCAC5KF,EAAAA,cAAAA,KAAAA,KAAI,YACJA,EAAAA,cAACG,EAAAA,EAAS,KAhGjB,wzCAiGOH,EAAAA,cAAAA,KAAAA,CAAII,GAAG,0BAAyB,2BAChCJ,EAAAA,cAACG,EAAAA,EAAS,KAtDjB,+nCAuDa,C","sources":["webpack://auto-immutable-docs/./src/pages/api/method/set/tags/order-of-operations.tsx"],"sourcesContent":["import React from 'react';\n\nimport CodeBlock from '../../../../../partials/code-block';\nimport Anchor from '../../../../../partials/anchor';\n\nconst SAMPLE =\n`import AutoImmutable, { Tag } from 'auto-immutable';\n\nconst protectedData = {\n    a: {\n        b: [\n            { x: 7, y: 8, z: 9 },\n            { x: 17, y: 18, z: 19 }\n        ]\n    },\n    j: 10,\n    q: [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n};\n\nconst aImmutable = new AutoImmutable( protectedData );\nconst consumer = aImmutable.connect();\n\nconsumer.set({\n    a: {\n        b: {\n            /* evaluated 1st */ [ Tag.DELETE ]: [ 0 ], // upon deleting aImmutable data.a.b[0] -> aImmutable data.a.b[1] becomes the new aImmutable data.a.b[0]\n            /* evaluated 3rd */ 0: Tag.CLEAR, // clear the new aImmutable data.a.b[0]\n            /* evaluated 4th */ 2: { x: 47, y: 48, z: 49 }, // add new item at aImmutable data.a.b[2],\n            /* evaluated 2nd */ [ Tag.PUSH ]: [{ x: 107, y: 108, z: 109 }] // appends aImmutable data.a.b[1]\n        }\n    },\n    j: { [ Tag.SET ]: currentValue => currentValue < 10 ? currentValue : 0 },\n    q: {\n        /* evaluated 1st */ [ Tag.MOVE ]: [ 5, 3, 2 ],\n        /* evaluated 2nd */ 12: 11\n    }\n});\n// => {\n//      a: {\n//          b: [\n//              {},\n//              { x: 107, y: 108, z: 109 },\n//              { x: 47, y: 48, z: 49 }\n//          ]\n//      },\n//      j: 0,\n//      q: [ 1, 2, 3, 6, 7, 4, 5, 8, 9, <empty>, <empty>, <empty>, 11 ]\n// };`;\n\nconst BATCHED_UPDATE_SAMPLE =\n`import AutoImmutable, { Tag } from 'auto-immutable';\n\nconst protectedData = {\n    a: \n        b: [\n            { x: 7, y: 8, z: 9 },\n            { x: 17, y: 18, z: 19 }\n        ]\n    },\n    j: 10,\n    q: [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n};\n\nconst aImmutable = new AutoImmutable( protectedData );\nconst consumer = aImmutable.connect();\n\nconsumer.set([\n    {\n        a: {\n            b: {\n                [ Tag.DELETE ]: [ 0 ]\n            }\n        },\n        j: { [ Tag.SET ]: currentValue => currentValue < 10 ? currentValue : 0 },\n        q: {\n            /* evaluated 1st */ [ Tag.MOVE ]: [ 5, 3, 2 ],\n            /* evaluated 2nd */ 12: 11\n        }\n    },\n    { a: { b: { 0: Tag.CLEAR } } },\n    { a: { b: { 2: { x: 47, y: 48, z: 49 } } } },\n    { a: { b: { [ Tag.PUSH ]: [{ x: 107, y: 108, z: 109 }] } } }\n]);\n// => {\n//      a: \n//          b: [\n//              undefined,\n//              undefined,\n//              { x: 47, y: 48, z: 49 },\n//              { x: 107, y: 108, z: 109 }\n//          ]\n//      },\n//      j: 0,\n//      q: [ 1, 2, 3, 6, 7, 4, 5, 8, 9, <empty>, <empty>, <empty>, 11 ]\n// };`;\n\nconst SetMethodApiFullUsagePage : React.FC<{className: string}> = ({ className }) => (\n    <article className={ `set-method-api-full-usage-page ${ className }` }>\n        <h1>Combination Tags Usage:</h1>\n        <p>Tags may be used in combination with the default usage where all top-level tag command results in property are sequentially merged into AutoImmutable data followed by the merging of the rest of the property changes.</p>\n        <p>Get finer control over update order with the <strong><Anchor to=\"/api/method/set/tags/order-of-operations#batched-update-example\">batched update method</Anchor></strong> illustrated in the next section.</p>\n        <h3>Example:</h3>\n        <CodeBlock>{ SAMPLE }</CodeBlock>\n        <h3 id=\"batched-update-example\">Batched Update Example:</h3>\n        <CodeBlock>{ BATCHED_UPDATE_SAMPLE }</CodeBlock>\n    </article>\n);\n\nexport default SetMethodApiFullUsagePage;\n"],"names":["_ref","className","React","Anchor","to","CodeBlock","id"],"sourceRoot":""}