{"version":3,"file":"component---src-pages-api-method-set-tags-replace-usage-tsx-155d3f07e4160f197628.js","mappings":"gNA6FA,UAZmEA,IAAA,IAAC,UAAEC,GAAW,SAC7EC,EAAAA,cAAAA,UAAAA,CAASD,UAAa,mCAAmCA,KACzDC,EAAAA,cAAAA,KAAAA,KAAI,uBACJA,EAAAA,cAAAA,IAAAA,KACIA,EAAAA,cAAAA,SAAAA,KAAQ,cACRA,EAAAA,cAAAA,MAAAA,KAAQ,2BAEZA,EAAAA,cAAAA,KAAAA,KAAI,YACJA,EAAAA,cAACC,EAAAA,EAAS,KAhFb,i/CAiFa,EAKP,MAAMC,EAAgB,IAAQF,EAAAA,cAAAA,QAAAA,KAASG,EAAAA,QAASC,MAAO,c","sources":["webpack://auto-immutable-docs/./src/pages/api/method/set/tags/replace-usage.tsx"],"sourcesContent":["import { HeadFC } from 'gatsby';\n\nimport React from 'react';\n\nimport metadata from '../../../../../../gatsby-config/metadata';\n\nimport CodeBlock from '../../../../../partials/code-block';\n\nconst SAMPLE =\n`import AutoImmutable, { Tag } from 'auto-immutable';\n\nconst protectedDatae = {\n    a: {\n        b: [\n            { x: 7, y: 8, z: 9 },\n            { x: 17, y: 18, z: 19 }\n        ]\n    },\n    j: 10\n};\n\nconst aImmutable = new AutoImmutable( protectedData );\nconst consumer = aImmutable.connect();\n\n/* rewrites aImmutable data to { a: 'Demo', j: 17 } */\nconsumer.set({\n    [ Tag.REPLACE ]: {\n        a: 'Demo',\n        j: 17\n    }\n});\n\n/* rewrites aImmutable data.a to { message: 'Testing...' } */\nconsumer.set({\n    a: {\n        [ Tag.REPLACE ]: {\n            message: 'Testing...'\n        }\n    }\n});\n\n//  rewrites aImmutable data.a.b[1] to { x: 97, y: 98, z: 99 };\n//  leaving aImmutable data.a.b = [\n//      { x: 7, y: 8, z: 9 },\n//      { x: 97, y: 98, z: 99 }\n//  ]\nconsumer.set({\n    a: {\n        b: [\n            aImmutable data.a.b[ 0 ],\n            {\n                [ Tag.REPLACE ]: {\n                    x: 97,\n                    y: 98,\n                    z: 99\n                }\n            }\n        ]\n    }\n});\n\n//  rewrites aImmutable data.a.b[1] to { x: 97, y: 98, z: 99 };\n//  leaving aImmutable data.a.b = [\n//      { x: 7, y: 8, z: 9 },\n//      { x: 97, y: 98, z: 99 }\n//  ]\n//  uses indexing (RECOMMENDED)\nconsumer.set({\n    a: {\n        b: {\n            1: {\n                [ Tag.REPLACE ]: {\n                    x: 97,\n                    y: 98,\n                    z: 99\n                }\n            }\n        }\n    }\n});`;\n\nconst SetMethodApiReplaceTagPage : React.FC<{className: string}> = ({ className }) => (\n    <article className={ `set-method-api-replace-tag-page ${ className }` }>\n    <h1>@@REPLACE Tag Usage</h1>\n    <p>\n        <strong>Signature:</strong>\n        <pre>{ `{ '@@REPLACE': <any> }` }</pre>\n    </p>\n    <h3>Example:</h3>\n    <CodeBlock>{ SAMPLE }</CodeBlock>\n    </article>\n);\n\nexport default SetMethodApiReplaceTagPage;\n\nexport const Head : HeadFC = () => ( <title>{ metadata.title }: @@REPLACE</title> );\n"],"names":["_ref","className","React","CodeBlock","Head","metadata","title"],"sourceRoot":""}