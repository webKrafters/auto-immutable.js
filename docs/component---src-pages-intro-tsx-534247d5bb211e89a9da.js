"use strict";(self.webpackChunkauto_immutable_docs=self.webpackChunkauto_immutable_docs||[]).push([[4638],{94936:function(e,t,l){l.r(t),l.d(t,{Head:function(){return i},default:function(){return m}});var a=l(67294),n=l(20574),r=l(30645),c=l(41520);var m=e=>{let{className:t}=e;const{site:{siteMetadata:{title:l,url:{demo:m,npm:i}}}}=(0,n.useStaticQuery)("1781803993");return a.createElement("article",{className:`intro-page ${t}`},a.createElement("h1",null,"Welcome to ",l,"!"),a.createElement("div",{className:"para"},"Framework agnostic automatic immutable writing data-structure for javascript and typescript functional programming."),a.createElement("div",{className:"para"},a.createElement("label",null,a.createElement("strong",null,"Official: "),a.createElement(r.Z,{to:i},"Auto Immutable JS"))),a.createElement("div",{className:"para installation"},a.createElement("h4",null,a.createElement("u",null,"Installation")),a.createElement("label",null,a.createElement("strong",null,"Main:"),a.createElement(c.Z,{isInline:!0},"npm install --save auto-immutable")),a.createElement("label",null,a.createElement("strong",null,"Alternate:"),a.createElement(c.Z,{isInline:!0},"npm install --save @webkrafters/auto-immutable"))),a.createElement("div",{className:"para"},a.createElement("label",null,a.createElement("strong",null,"Play with a demo app here on: "),a.createElement(r.Z,{to:m},"Code Sandbox"))),a.createElement("div",{className:"para"},a.createElement("label",null,a.createElement("strong",null,"License: "),a.createElement("span",null,"MIT"))),a.createElement("div",{className:"para"},a.createElement("h2",null,"Why ",l,"?"),"Why should ",a.createElement("i",null,a.createElement("strong",null,"you"))," consider ",l," for your next project?",a.createElement("br",null),"Here are a few reasons:",a.createElement("ul",null,a.createElement("li",null," Auto-immutable protects data from random mutations. "),a.createElement("li",null," It is write-friendly. No need for ",a.createElement("code",null,"[].concat([...])"),", ",a.createElement("code",null,"Object.assign(...)"),", ",a.createElement("code",null,"$.extend(...)"),a.createElement("code",null,"...rest"),", ",a.createElement("code",null,"...spread")," or any similar operation. See ",a.createElement(r.Z,{to:"/api/method/set"},a.createElement("code",null,"immutable.set(...)")),"."),a.createElement("li",null," It is read-friendly. Simply call the ",a.createElement("code",null,"get(...)")," with the data object property paths to read. See ",a.createElement(r.Z,{to:"/api/method/get"},a.createElement("code",null,"immutable.get(...)")),"."),a.createElement("li",null," Recognizes ",a.createElement("b",null,"negative array indexing"),". Please see ",a.createElement(r.Z,{to:"/concepts/property-path"},"Property Path")," and ",a.createElement("code",null,"immutable.set(...)")," ",a.createElement(r.Z,{to:"/api/method/set/array-indexing"},"Indexing"),"."))),a.createElement("div",{className:"para"},"May see features history at ",a.createElement(r.Z,{to:"/history/features"},"What's Changed?")))};const i=e=>{let{data:t}=e;return a.createElement(a.Fragment,null,a.createElement("title",null,"Welcome to ",t.site.siteMetadata.title,"!"),a.createElement("meta",{content:`Welcome to ${t.site.siteMetadata.title}.`,name:"description"}))}}}]);
//# sourceMappingURL=component---src-pages-intro-tsx-534247d5bb211e89a9da.js.map