"use strict";(self.webpackChunkauto_immutable_docs=self.webpackChunkauto_immutable_docs||[]).push([[2563],{3374:function(a,e,t){t.r(e),t.d(e,{Head:function(){return u}});var n=t(67294),m=t(75591),l=t(41520);e.default=a=>{let{className:e}=a;return n.createElement("article",{className:`set-method-api-clear-tag-page ${e}`},n.createElement("h1",null,"@@CLEAR Tag Usage"),n.createElement("p",null,n.createElement("strong",null,"Signature 1:")," ",n.createElement("code",null,"'@@CLEAR'")),n.createElement("p",null,n.createElement("strong",null,"Signature 2:"),n.createElement("pre",null,"{ '@@CLEAR': <any> }; // the value has no effect.")),n.createElement("h3",null,"Example:"),n.createElement(l.Z,null,"import AutoImmutable, { Tag } from 'auto-immutable';\n\nconst protectedData = {\n    a: {\n        b: [\n            { x: 7, y: 8, z: 9 },\n            { x: 17, y: 18, z: 19 }\n        ]\n    },\n    j: 10\n};\n\nconst aImmutable = new AutoImmutable( protectedData );\nconst consumer = aImmutable.connect();\n\n/* empties aImmutable data; sets aImmutable data = {} */\nconsumer.set( Tag.CLEAR )\n// or consumer.set({ [ Tag.CLEAR ]: <anything> })\n\n\n//  empties the value at aImmutable data.a.b;\n//  sets aImmutable data.a.b = []\nconsumer.set({\n    a: {\n        b: Tag.CLEAR // or { [ Tag.CLEAR ]: <anything> }\n    }\n});\n\n\n//  empties the value at aImmutable data.a.j;\n//  sets aImmutable data.a.j = null\nconsumer.set({\n    a: {\n        j: Tag.CLEAR // or { [ Tag.CLEAR ]: <anything> }\n    }\n});\n\n//  empties the value at aImmutable data.a.b[ 0 ];\n//  sets aImmutable data.a.b = [{}]\nconsumer.set({\n    a: {\n        b: [ Tag.CLEAR ] // or { [ Tag.CLEAR ]: <anything> }\n    }\n});\n\n//  empties the value at aImmutable data.a.b[0];\n//  sets aImmutable data.a.b = [{}, aImmutable data.a.b[1]]\nconsumer.set({\n    a: {\n        b: [\n            Tag.CLEAR, // or { [ Tag.CLEAR ]: <anything> }\n            aImmutable data.a.b[1]\n        ]\n    }\n});\n\n// empties the value at aImmutable data.a.b[0];\n// sets aImmutable data.a.b = [{}, a.b[1]]\n// uses indexing (RECOMMENDED)\nconsumer.set({\n    a: {\n        b: {\n            0: Tag.CLEAR // or { [ Tag.CLEAR ]: <anything> }\n        }\n    }\n});"))};const u=()=>n.createElement("title",null,m.default.title,": @@CLEAR")}}]);
//# sourceMappingURL=component---src-pages-api-method-set-tags-clear-usage-tsx-f6949472fd16f0e54da8.js.map