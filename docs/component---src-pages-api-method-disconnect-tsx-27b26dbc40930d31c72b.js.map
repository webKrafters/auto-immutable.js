{"version":3,"file":"component---src-pages-api-method-disconnect-tsx-27b26dbc40930d31c72b.js","mappings":"6KAMA,MAAMA,EAAY,CAAEC,MAAO,QAyG3B,UAfgEC,IAAA,IAAC,UAAEC,GAAW,SAC1EC,EAAAA,cAAAA,UAAAA,CAASD,UAAa,8BAA8BA,KAChDC,EAAAA,cAAAA,KAAAA,KAAI,6BACJA,EAAAA,cAAAA,IAAAA,KAAG,gFAA6E,gBAACC,EAAAA,EAAM,CAACC,GAAG,iBAAgBF,EAAAA,cAAAA,OAAAA,KAAM,qBAAgC,8BACjJA,EAAAA,cAAAA,IAAAA,KAAG,oBAAiB,8BAAQA,EAAAA,cAAAA,OAAAA,KAAM,oBAA+B,gCAA6B,4BAAM,cAAiB,0FACrHA,EAAAA,cAAAA,IAAAA,KAAG,mIACHA,EAAAA,cAACG,EAAAA,EAAS,KA7FjB,shCA8FOH,EAAAA,cAAAA,KAAAA,KAAI,0BACJA,EAAAA,cAAAA,IAAAA,KAAG,yGACHA,EAAAA,cAAAA,IAAAA,KAAG,+FACHA,EAAAA,cAAAA,IAAAA,KAAGA,EAAAA,cAAAA,SAAAA,CAAQI,MAAQR,GAAYI,EAAAA,cAAAA,IAAAA,KAAG,UAAkB,6BAA0B,8BAAQA,EAAAA,cAAAA,OAAAA,KAAM,eAA0B,qKACtHA,EAAAA,cAACG,EAAAA,EAAS,KArDjB,i5BAsDa,C","sources":["webpack://auto-immutable-docs/./src/pages/api/method/disconnect.tsx"],"sourcesContent":["import React from 'react';\n\nimport Anchor from '../../../partials/anchor';\n\nimport CodeBlock from '../../../partials/code-block';\n\nconst noteStyle = { color: '#f74' };\n\nconst DISCONNECT_SAMPLE =\n`import AutoImmutable from 'auto-immutable';\n\nconst aImmutable = new AutoImmutable({\n    a: {\n        b: {\n            c: 22\n            d: 60\n         },\n         x: 99\n    }\n});\n\nconst consumer = aImmutable.connect(); // returns a consumer for this AutoImmutable instance\n\nconsumer.get( 'a.b.d', 'a.x' );\n// returns {\n//    'a.b.d': 60,\n//    'a.x': 99\n// }\n\nconsole.log( consumer.instanceId ); // prints this consumer's unique id\n\nconsole.log( consumer.disconnected ); // prints \\`false\\`\n\nconsumer.disconnect(); // severs connection to the AutoImmutable instance.\n\nconsole.log( consumer.disconnected ); // prints \\`true\\`\n\nconsumer.get( 'a.b.d', 'a.x' ); // returns \\`undefined\\`\n\nconsumer.set({ a: { x: 1000 } }); // cannot update the immutable data\n\n/* ----------------------------------------------------- */\n\nconst consumer1 = aImmutable.connect();\n\nconsumer1.get( 'a.b.d', 'a.x' );\n// returns {\n//    'a.b.d': { m: 70 },\n//    'a.x': 99\n// }\n\nconsole.log( consumer.disconnected ); // prints \\`false\\``;\n\nconst SUMMARY_CLOSURE_SAMPLE =\n`import AutoImmutable from 'auto-immutable';\n\nconst protectedData = {\n    a: {\n        b: {\n            c: 22\n            d: 60\n         },\n         x: 99\n    }\n};\n\ntype Data = typeof protectedData;\n\nconst aImmutable = new AutoImmutable<ProtectedData>( protectedData );\n\nconsole.log( aImmutable.closed )\n// prints \\`false\\`;\n\nconst consumers : Array<Connection<ProtectedData>> = [];\n\nfor( let c = 5; c--; ) {\n    consumers.push( aImmutable.connect();\n}\n\nconsumers.forEach( c => console.log( c.disconnected ) );\n// prints \\`false\\` 5 times\n\nconsumers.forEach( c => console.log( c.get( 'a.x' ) ) );\n// prints \\`{'a.x': 99}\\` 5 times;\n\naImmutable.close();\n\nconsole.log( aImmutable.closed )\n// prints \\`true\\`;\n\nconsumers.forEach( c => console.log( c.disconnected ) );\n// prints \\`true\\` 5 times\n\nconsumers.forEach( c => console.log( c.get( 'a.x' ) ) );\n// prints \\`undefined\\` 5 times;`; \n\nconst DisconnectMethodApiPage : React.FC<{className: string}> = ({ className }) => (\n    <article className={ `disconnect-method-api-page ${ className }` }>\n        <h1>Disconnecting from Source</h1>\n        <p>Any AutoImmutable instance communicates with its environment through its own <Anchor to=\"/api#consumer\"><code>Connection class</code></Anchor> (the consumer) instances.</p>\n        <p>The Connection's <strong><code>disconnect(...)</code></strong> parameterless method of the <code>Connection</code> instance provides the means for disconnecting itself from its AutoImmutable instance.</p>\n        <p>This method also prompts the source AutoImmutable instance to deallocate all resources dedicated to the disconnecting consumer.</p>\n        <CodeBlock>{ DISCONNECT_SAMPLE }</CodeBlock>\n        <h2>Further Considerations</h2>\n        <p>This method serves as the final association between a consumer and its source AutoImmutable instance.</p>\n        <p>Once issued, the instant consumer loses accessibility to its source AutoImmutable instance.</p>\n        <p><strong style={ noteStyle }><u>Note:</u></strong> calling an AutoImmutable <strong><code>close(...)</code></strong> method summarily disconnects all its connected consumers. This instant consumer, if connected to the given AutoImmutable instance, will be disconnected as well.</p>\n        <CodeBlock>{ SUMMARY_CLOSURE_SAMPLE }</CodeBlock>\n    </article>\n);\n\nexport default DisconnectMethodApiPage;"],"names":["noteStyle","color","_ref","className","React","Anchor","to","CodeBlock","style"],"sourceRoot":""}